设计一个支持 push，pop，top 操作，并能在常数时间内检索到最小元素的栈。

    push(x) -- 将元素 x 推入栈中。
    pop() -- 删除栈顶的元素。
    top() -- 获取栈顶元素。
    getMin() -- 检索栈中的最小元素。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/min-stack
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

//方法一
class MinStack 
{
    /** initialize your data structure here. */
    Node first;
    
    SortNode sortFirst;
    
    class Node<Item>
    {
        int item;
        Node next;
    }
    
    class SortNode
    {
        int item;
        SortNode next;
    }
    
    public MinStack() 
    {
        
    }
    
    public void push(int x) 
    {      
        Node old_first = first;
        first = new Node();
        first.item = x;
        first.next = old_first;
        SortNode old_sort_first = sortFirst;
        if(sortFirst == null)
        {
            sortFirst = new SortNode();
            sortFirst.item = x;
            sortFirst.next = old_sort_first;
        }
        else if(sortFirst.item > x)
        {
            sortFirst = new SortNode();
            sortFirst.item = x;
            sortFirst.next = old_sort_first;
        }
        else
        {
            sortFirst = new SortNode();
            sortFirst.item = old_sort_first.item;
            sortFirst.next = old_sort_first;
        }    
    }
    
    public void pop() 
    {
        if(first == null)
            return;
        first = first.next;
        sortFirst = sortFirst.next;
    }
    
    public int top() 
    {
        return first.item;
    }
    
    public int getMin() 
    {
        return sortFirst.item;
    }
}
