import java.util.Comparator;

//方法一、实现Comparable，实现里面的compareTo方法，compareTo方法是比较对象调用的
class Student implements Comparable<Student>
{
    private int age;
    private String name;
    private int score;

    @Override
    public String toString() {
        return "Student{" +
                "age=" + age +
                ", name='" + name + '\'' +
                ", score=" + score +
                '}';
    }
    Student(int age,String name,int score)
    {
        this.age = age;
        this.name = name;
        this.score = score;
    }
    public void setAge(int age) {
        this.age = age;
    }

    public void setName(String name) {
        this.name = name;
    }

    public void setScore(int score) {
        this.score = score;
    }

    public int getAge() {
        return age;
    }

    public String getName() {
        return name;
    }

    public int getScore() {
        return score;
    }

    @Override
    public int compareTo(Student stu) {
        if(this.score>stu.score)
            return 1;
        if(this.score<stu.score)
            return -1;
        if(this.age>stu.age)
            return 1;
        if(this.age<stu.age)
            return -1;
        if(this.name.length()>stu.name.length())
            return 1;
        if(this.name.length()<stu.name.length())
            return -1;
        return 0;

    }
}


//方法二、定义一个类，实现Comparator接口即比较器，实现compare方法，compare方法实现Comparator接口的类调用的，而不是比较用于比较的对象。
class PersonComp  implements Comparator<Person>
{
        @Override
        public int compare(Person p1, Person p2)
        {
            if(p1.getScore()>p2.getScore())
                return 1;
            if(p1.getScore()<p2.getScore())
                return -1;
            if(p1.getAge()>p2.getAge())
                return 1;
            if(p1.getAge()<p2.getAge())
                return -1;
            if(p1.getName().length()>p2.getName().length())
                return 1;
            if(p1.getName().length()<p2.getName().length())
                return -1;
            return 0;
        }
}
class Person
{
    private int age;
    private String name;
    private int score;

    @Override
    public String toString() {
        return "Person{" +
                "age=" + age +
                ", name='" + name + '\'' +
                ", score=" + score +
                '}';
    }
    Person(int age,String name,int score)
    {
        this.age = age;
        this.name = name;
        this.score = score;
    }
    public void setAge(int age) {
        this.age = age;
    }

    public void setName(String name) {
        this.name = name;
    }

    public void setScore(int score) {
        this.score = score;
    }

    public int getAge() {
        return age;
    }

    public String getName() {
        return name;
    }

    public int getScore() {
        return score;
    }



}

public class Sort
{
    public static void main(String[] args) {
        Comparator comp = new PersonComp();
        Person person[]= {new Person(14,"zhangsan",100),new Person(14,"lisi",101),new Person(15,"wangwu",99)};
        //Comparator comp[] = new Person();
        for(int i=0;i<person.length;i++)
        {
            int min = i;
            for(int j=i+1;j<person.length;j++)
            {
                if(comp.compare(person[min],person[j])>0)
                    min = j;
            }
            Person temp = person[min];
            person[min] = person[i];
            person[i] = temp;
        }
        for(int i=0;i<person.length;i++)
        {
            System.out.println(person[i].toString());
        }
    }


}
